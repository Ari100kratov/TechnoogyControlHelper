//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestIzm.Model.Db
{
    using System;
    using System.Collections.Generic;
    
    public partial class Machine
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Machine()
        {
            this.Machine1 = new HashSet<Machine>();
            this.ParamInMachine2 = new HashSet<ParamInMachine>();
            this.OperatingProgramExecutionLog = new HashSet<OperatingProgramExecutionLog>();
        }
    
        public int ID { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public Nullable<System.DateTime> StartDate { get; set; }
        public Nullable<System.DateTime> FinDate { get; set; }
        public Nullable<System.Guid> PluginID { get; set; }
        public Nullable<int> DeptID { get; set; }
        public Nullable<int> MachineStateID { get; set; }
        public string ShortName { get; set; }
        public string MachineNum { get; set; }
        public Nullable<int> MachinePurposeID { get; set; }
        public Nullable<int> MachineTypeID { get; set; }
        public Nullable<int> DetailTypeID { get; set; }
        public int IsBlockedMachine { get; set; }
        public Nullable<int> MachineModelId { get; set; }
        public Nullable<double> MoneyLoose { get; set; }
        public string ProgramFolder { get; set; }
        public int IsHide { get; set; }
        public string IntegrationID { get; set; }
        public string IntegrationDeptID { get; set; }
        public Nullable<decimal> OEEPlan { get; set; }
        public string CNCNetworkFolder { get; set; }
        public Nullable<decimal> UseKoeff { get; set; }
        public Nullable<decimal> UseKoeffAviaSmol { get; set; }
        public int IsDiagFaulted { get; set; }
        public int IsUseBaltsystemCNC { get; set; }
        public int IsSearchProgramByServer { get; set; }
        public int IsAllowSetIdleMPDevice { get; set; }
        public int IsAllowSetMiniOpMPDevice { get; set; }
        public Nullable<int> SettingOeeID { get; set; }
        public Nullable<int> CurrentIntegrationProgramId { get; set; }
        public int IntegrationOperationId { get; set; }
        public Nullable<int> kEquipmentId { get; set; }
        public int IsAutoControlPPR { get; set; }
        public int NetworkWorkTypeId { get; set; }
        public string FTPLogin { get; set; }
        public string FTPPassword { get; set; }
        public int IsDeleteFileByFtp { get; set; }
        public int IsSavePerformedUPToDisk { get; set; }
        public int IsLoadingNotLinkedFolderUP { get; set; }
        public int IsNotInAnalitic { get; set; }
        public int IsInRealTimeOnClient { get; set; }
        public Nullable<decimal> MachineNominalPower { get; set; }
        public int ProtocolWorkingWithUpTypeId { get; set; }
        public int IsAllowDownloadUpToMachineMemory { get; set; }
        public int IsGettingUpFromLocalResource { get; set; }
        public int UpLocalResourceTypeId { get; set; }
        public string UpLocalResourcePath { get; set; }
        public string UpLocalResourceLogin { get; set; }
        public string UpLocalResourcePassword { get; set; }
        public Nullable<int> ViDiagDeviceId { get; set; }
        public Nullable<int> RegisterDataProtocolId { get; set; }
        public Nullable<int> UpProtocolId { get; set; }
        public int MonitoringPointTypeId { get; set; }
        public int IsTriggerIgnore { get; set; }
        public int IsNeedTransferMultiplyFilesUp { get; set; }
    
        public virtual ParamInMachine ParamInMachine { get; set; }
        public virtual MachineParam MachineParam { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Machine> Machine1 { get; set; }
        public virtual Machine Machine2 { get; set; }
        public virtual ParamInMachine ParamInMachine1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ParamInMachine> ParamInMachine2 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OperatingProgramExecutionLog> OperatingProgramExecutionLog { get; set; }
    }
}
